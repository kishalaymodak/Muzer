// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  provider Provider
  strems   Stream[] @relation("user")
  upvotes  Upvote[]
  added    Stream[] @relation("addedBy")
}

model Stream {
  id            String         @id @default(uuid())
  type          StreamType
  url           String
  extractedId   String
  title         String         @default("")
  smallImageUrl String         @default("")
  bigImageUrl   String         @default("")
  played        Boolean        @default(false)
  playedTs      DateTime
  createAt      DateTime       @default(now())
  active        Boolean        @default(true)
  addedById     String
  upvots        Upvote[]
  userId        String
  user          User           @relation(fields: [userId], references: [id], name: "user")
  addedBy       User           @relation(fields: [addedById], references: [id], name: "addedBy")
  currentStream CurrentStream?
}

model CurrentStream {
  userId   String  @id
  streamId String? @unique
  stream   Stream? @relation(fields: [streamId], references: [id])
}

model Upvote {
  id       String @id @default(uuid())
  userId   String
  streamId String
  user     User   @relation(fields: [userId], references: [id])
  stream   Stream @relation(fields: [streamId], references: [id])

  @@unique([userId, streamId])
}

enum StreamType {
  Spotify
  Youtube
}

enum Provider {
  Google
}
